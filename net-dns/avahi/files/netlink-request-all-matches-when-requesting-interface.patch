From 882da7d7385e51024bc64a08a21cfd86cc55f3d1 Mon Sep 17 00:00:00 2001
From: Andy Whitcroft <apw@canonical.com>
Date: Tue, 18 Jan 2011 10:30:58 +0000
Subject: [PATCH] netlink: request all matches when requesting interface and address lists

When requesting the a full list of interfaces and addresses for the machine
avahi uses a wild card netlink search.  This is done via a NLM_F_ROOT
request.  However we do not correctly request NLM_F_MATCH indicating
we want all matches.  This leads to the requests returning EINVAL on
v2.6.38-rc1 and later kernels and to the daemon hanging during startup.

Prior to v2.6.38-rc1 bugs in the kernel caused NLM_F_ROOT to incorrectly
imply NLM_F_MATCH, see the commit below for details:

    commit 0ab03c2b1478f2438d2c80204f7fef65b1bca9cf
    Author: Jan Engelhardt <jengelh@medozas.de>
    Date:   Fri Jan 7 03:15:05 2011 +0000

	netlink: test for all flags of the NLM_F_DUMP composite

Add the missing NLM_F_MATCH.

Signed-off-by: Andy Whitcroft <apw@canonical.com>
---
 avahi-core/iface-linux.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/avahi-core/iface-linux.c b/avahi-core/iface-linux.c
index a1b7f73..9a0bbb6 100644
--- a/avahi-core/iface-linux.c
+++ b/avahi-core/iface-linux.c
@@ -53,7 +53,7 @@ static int netlink_list_items(AvahiNetlink *nl, uint16_t type, unsigned *ret_seq
     n = (struct nlmsghdr*) req;
     n->nlmsg_len = NLMSG_LENGTH(sizeof(struct rtgenmsg));
     n->nlmsg_type = type;
-    n->nlmsg_flags = NLM_F_ROOT|NLM_F_REQUEST;
+    n->nlmsg_flags = NLM_F_MATCH|NLM_F_ROOT|NLM_F_REQUEST;
     n->nlmsg_pid = 0;
 
     gen = NLMSG_DATA(n);
-- 
1.7.1

